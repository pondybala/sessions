<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PD Sessions</title>
    <link>http://example.org/</link>
    <description>Recent content on PD Sessions</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 17 Feb 2023 18:45:50 -0800</lastBuildDate><atom:link href="http://example.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Solid</title>
      <link>http://example.org/posts/solid/</link>
      <pubDate>Fri, 17 Feb 2023 18:45:50 -0800</pubDate>
      
      <guid>http://example.org/posts/solid/</guid>
      <description>SOLID principles are a set of principles used to design software that is easy to maintain and extend over time.
The principles are: Single Responsibility Principle (SRP) Open-Closed Principle (OCP) Liskov Substitution Principle (LSP) Interface Segregation Principle (ISP) Dependency Inversion Principle (DIP) Here are examples of each principle in Java and how they are interrelated:
Single Responsibility Principle (SRP) The SRP states that a class should have only one reason to change.</description>
    </item>
    
  </channel>
</rss>
